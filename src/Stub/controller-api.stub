<?php
declare(strict_types = 1);

namespace {{namespace}};

use {{model_class}};
use {{use_base_action}};
use {{use_controller_trait}};
{{use_requests}}
use {{use_columns}};
use {{use_form_widgets}};
use {{use_table_columns}};
use {{use_base_resources}};
use {{use_base_resources_collection}};
use {{use_base_controller}};

/**
 * {{entity_name}}控制器
 *
 * @package_name {zh-CN: {{package_name}} | en: {{package_en_name}}}
 * @module_name {zh-CN: {{module_name}} | en: {{module_en_name}}}
 * @controller_name {zh-CN: {{entity_name}} | en: Management {{entity_en_name}}}
 *
 * @author  {{author}}
 * @date    {{date}}
 */
class {{controller_name}}Controller extends Controller
{
    use BaseActionTrait;
    use {{controller_name}}Trait;

    protected {{model_name}} $model;

    /**
     * @param \{{model_class}} $model
     */
    public function __construct({{model_name}} $model)
    {
        $this->model = $model;
    }

    /**
     * {{entity_name}}列表
     */
    public function index(IndexRequest $request): BaseResourceCollection
    {
        $validated = $request->validated();
        $fields    = $this->getListFields();
        $result    = $this->model->select($fields)
                                 ->filter($validated)
                                 ->latest('{{model_key_name}}')
                                 ->paginate(($validated['page_limit'] ?? NULL));

        return BaseResource::collection($result)
                           ->additional([
                               'columns'      => new TableColumnsCollection($this->getListColumns()),
                               'form_widgets' => new FormWidgetCollection($this->getListFormWidgets($request)),
                           ]);
    }

    /**
     * 查看{{entity_name}}
     */
    public function show(int $id): BaseResource
    {
        $fields  = [{{show_fields}}];
        $result  = $this->model->select($fields)->findOrFail($id);

        $columns = [{{show_fields}}];

        return BaseResource::make($result)->additional(['columns' => new ColumnsCollection($columns)]);
    }

}
